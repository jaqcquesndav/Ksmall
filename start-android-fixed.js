/**
 * Script optimis√© pour d√©marrer l'application Android apr√®s avoir nettoy√© le cache
 * et en contournant les probl√®mes potentiels de bundling
 */

const { execSync } = require('child_process');
const fs = require('fs');
const path = require('path');

console.log('üöÄ D√©marrage de l\'application Android avec optimisations...');

// 1. S'assurer que Metro n'est pas d√©j√† en cours d'ex√©cution
try {
  console.log('üîç V√©rification des processus Metro en cours...');
  const isWindows = process.platform === 'win32';
  
  if (isWindows) {
    // Pour Windows, v√©rifier si le processus est en cours d'ex√©cution
    try {
      execSync('taskkill /f /im node.exe', { stdio: 'ignore' });
      console.log('‚úÖ Processus Node.js pr√©c√©dents arr√™t√©s');
    } catch (e) {
      // Ignore errors - no processes might be running
    }
  } else {
    // Pour macOS/Linux
    try {
      execSync("pkill -f 'metro'", { stdio: 'ignore' });
      console.log('‚úÖ Processus Metro pr√©c√©dents arr√™t√©s');
    } catch (e) {
      // Ignore errors - no processes might be running
    }
  }
} catch (error) {
  console.log('‚ÑπÔ∏è Aucun processus Metro n\'a √©t√© trouv√© en cours d\'ex√©cution');
}

// 2. Nettoyer le cache temporaire
console.log('üßπ Nettoyage des caches temporaires...');

// Supprimer le dossier .metro temporaire s'il existe
const tempMetroFolder = path.join(__dirname, '.metro');
if (fs.existsSync(tempMetroFolder)) {
  try {
    fs.rmSync(tempMetroFolder, { recursive: true, force: true });
    console.log('‚úÖ Dossier .metro supprim√©');
  } catch (err) {
    console.error('‚ö†Ô∏è Impossible de supprimer le dossier .metro', err);
  }
}

// 3. Mettre √† jour la variable d'environnement pour une meilleure gestion de la m√©moire
process.env.NODE_OPTIONS = '--max_old_space_size=4096';

// 4. D√©marrer l'application avec les options optimis√©es
console.log('üöÄ D√©marrage de l\'application...');

try {
  execSync('node node_modules/react-native/cli.js start --reset-cache --max-workers=2', {
    stdio: 'inherit',
    env: {
      ...process.env,
      REACT_DEBUGGER: 'echo D√©bogage d√©sactiv√©', // D√©sactiver temporairement le d√©bogueur
      RCT_NO_LAUNCH_PACKAGER: 'true' // Important pour √©viter les lancements multiples de Metro
    }
  });
} catch (error) {
  console.error('‚ùå Erreur lors du d√©marrage du bundler:', error);
  
  console.log('\nüîÑ Tentative avec la m√©thode alternative...');
  try {
    execSync('npx expo start --android --clear', { stdio: 'inherit' });
  } catch (innerError) {
    console.error('‚ùå Erreur lors du d√©marrage avec Expo:', innerError);
    console.log('\nüîß Suggestions de d√©pannage:');
    console.log('1. Ex√©cutez "node clean-metro-cache.js" pour nettoyer le cache');
    console.log('2. V√©rifiez votre connexion r√©seau');
    console.log('3. V√©rifiez la configuration de votre √©mulateur ou appareil');
    process.exit(1);
  }
}